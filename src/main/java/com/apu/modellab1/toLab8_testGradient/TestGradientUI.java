package com.apu.modellab1.toLab8_testGradient;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 * This type was generated by a SmartGuide.
 */
public class TestGradientUI extends JFrame {
	private JPanel ivjJFrameContentPane = null;

	private JPanel ivjTestGradientViewPane = null;

	private widgets.Diagram ivjDiagramForController = null;

	private widgets.Diagram ivjDiagramForMonitor = null;

	private widgets.Diagram ivjDiagramForObject = null;

	IvjEventHandler ivjEventHandler = new IvjEventHandler();

	private PidControllerView ivjPidControllerView = null;

	private DelayObjectView ivjDelayObjectView = null;

	private StepTimerView ivjStepTimerView = null;

	private OptimizerView ivjOptimizerView = null;

	class IvjEventHandler implements java.awt.event.WindowListener,
			com.apu.modellab1.toLab8_testGradient.StepTimerViewListener {
		public void FinishTime_caretUpdate(java.util.EventObject newEvent) {
			if (newEvent.getSource() == TestGradientUI.this
					.getStepTimerView()) {
				getDiagramForObject().setHorizontalMaxText(
						getStepTimerView().getFinishTimeText());
				getDiagramForController().setHorizontalMaxText(
						getStepTimerView().getFinishTimeText());
			}
		};

		public void windowActivated(java.awt.event.WindowEvent e) {
		};

		public void windowClosed(java.awt.event.WindowEvent e) {
		};

		public void windowClosing(java.awt.event.WindowEvent e) {
		};

		public void windowDeactivated(java.awt.event.WindowEvent e) {
		};

		public void windowDeiconified(java.awt.event.WindowEvent e) {
		};

		public void windowIconified(java.awt.event.WindowEvent e) {
		};

		public void windowOpened(java.awt.event.WindowEvent e) {
			if (e.getSource() == TestGradientUI.this) {
				TestGradientUI.this.initApp();
			}
		};
	};

	/**
	 * TestGradientUI constructor comment.
	 */
	public TestGradientUI() {
		super();
		initialize();
	}

	/**
	 * TestGradientUI constructor comment.
	 * 
	 * @param title
	 *            java.lang.String
	 */
	public TestGradientUI(String title) {
		super(title);
	}

	/**
	 * Return the ControlObjectView property value.
	 * 
	 * @return toLab8_testGradient.DelayObjectView
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private DelayObjectView getDelayObjectView() {
		if (ivjDelayObjectView == null) {
			try {
				ivjDelayObjectView = new com.apu.modellab1.toLab8_testGradient.DelayObjectView();
				ivjDelayObjectView.setName("DelayObjectView");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjDelayObjectView;
	}

	/**
	 * Return the Diagram11 property value.
	 * 
	 * @return paint.Diagram
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private widgets.Diagram getDiagramForController() {
		if (ivjDiagramForController == null) {
			try {
				ivjDiagramForController = new widgets.Diagram();
				ivjDiagramForController.setName("DiagramForController");
				ivjDiagramForController.setHorizontalMaxText("5");
				ivjDiagramForController.setVerticalMinText("0");
				ivjDiagramForController
						.setTitleText("Сигнал на выходе регулятора");
				ivjDiagramForController.setPainterColor(java.awt.Color.magenta);
				ivjDiagramForController.setVerticalMaxText("50");
				ivjDiagramForController.setPanelBackground(new java.awt.Color(
						169, 255, 184));
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjDiagramForController;
	}

	/**
	 * Return the Diagram1 property value.
	 * 
	 * @return paint.Diagram
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private widgets.Diagram getDiagramForMonitor() {
		if (ivjDiagramForMonitor == null) {
			try {
				ivjDiagramForMonitor = new widgets.Diagram();
				ivjDiagramForMonitor.setName("DiagramForMonitor");
				ivjDiagramForMonitor.setHorizontalMaxText("100");
				ivjDiagramForMonitor
						.setTitleText("Динамическая ошибка по шагам");
				ivjDiagramForMonitor.setPainterColor(java.awt.Color.magenta);
				ivjDiagramForMonitor.setVerticalMaxText("50");
				ivjDiagramForMonitor.setPanelBackground(new java.awt.Color(169,
						255, 184));
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjDiagramForMonitor;
	}

	/**
	 * Return the Diagram111 property value.
	 * 
	 * @return paint.Diagram
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private widgets.Diagram getDiagramForObject() {
		if (ivjDiagramForObject == null) {
			try {
				ivjDiagramForObject = new widgets.Diagram();
				ivjDiagramForObject.setName("DiagramForObject");
				ivjDiagramForObject.setHorizontalMaxText("5");
				ivjDiagramForObject.setVerticalMinText("0");
				ivjDiagramForObject.setTitleText("Сигнал на выходе объекта");
				ivjDiagramForObject.setPainterColor(java.awt.Color.magenta);
				ivjDiagramForObject.setVerticalMaxText("50");
				ivjDiagramForObject.setPanelBackground(new java.awt.Color(146,
						255, 190));
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjDiagramForObject;
	}

	/**
	 * Return the JFrameContentPane property value.
	 * 
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getJFrameContentPane() {
		if (ivjJFrameContentPane == null) {
			try {
				ivjJFrameContentPane = new javax.swing.JPanel();
				ivjJFrameContentPane.setName("JFrameContentPane");
				ivjJFrameContentPane.setLayout(new java.awt.BorderLayout());
				getJFrameContentPane().add(getTestGradientViewPane(), "Center");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJFrameContentPane;
	}

	/**
	 * Return the OptimizerView1 property value.
	 * 
	 * @return toLab8_testGradient.OptimizerView
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private OptimizerView getOptimizerView() {
		if (ivjOptimizerView == null) {
			try {
				ivjOptimizerView = new com.apu.modellab1.toLab8_testGradient.OptimizerView();
				ivjOptimizerView.setName("OptimizerView");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjOptimizerView;
	}

	/**
	 * Return the PidControllerView1 property value.
	 * 
	 * @return toLab8_testGradient.PidControllerView
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private PidControllerView getPidControllerView() {
		if (ivjPidControllerView == null) {
			try {
				ivjPidControllerView = new com.apu.modellab1.toLab8_testGradient.PidControllerView();
				ivjPidControllerView.setName("PidControllerView");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjPidControllerView;
	}

	/**
	 * Return the StepTimerView property value.
	 * 
	 * @return toLab8_testGradient.StepTimerView
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private StepTimerView getStepTimerView() {
		if (ivjStepTimerView == null) {
			try {
				ivjStepTimerView = new com.apu.modellab1.toLab8_testGradient.StepTimerView();
				ivjStepTimerView.setName("StepTimerView");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjStepTimerView;
	}

	/**
	 * Return the TestGradientViewPane property value.
	 * 
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getTestGradientViewPane() {
		if (ivjTestGradientViewPane == null) {
			try {
				ivjTestGradientViewPane = new javax.swing.JPanel();
				ivjTestGradientViewPane.setName("TestGradientViewPane");
				ivjTestGradientViewPane.setLayout(new java.awt.GridBagLayout());

				java.awt.GridBagConstraints constraintsDiagramForMonitor = new java.awt.GridBagConstraints();
				constraintsDiagramForMonitor.gridx = 2;
				constraintsDiagramForMonitor.gridy = 4;
				constraintsDiagramForMonitor.fill = java.awt.GridBagConstraints.BOTH;
				constraintsDiagramForMonitor.weightx = 1.0;
				constraintsDiagramForMonitor.weighty = 1.0;
				constraintsDiagramForMonitor.ipadx = 25;
				constraintsDiagramForMonitor.ipady = -22;
				constraintsDiagramForMonitor.insets = new java.awt.Insets(2, 2,
						3, 2);
				getTestGradientViewPane().add(getDiagramForMonitor(),
						constraintsDiagramForMonitor);

				java.awt.GridBagConstraints constraintsDiagramForController = new java.awt.GridBagConstraints();
				constraintsDiagramForController.gridx = 2;
				constraintsDiagramForController.gridy = 2;
				constraintsDiagramForController.fill = java.awt.GridBagConstraints.BOTH;
				constraintsDiagramForController.weightx = 1.0;
				constraintsDiagramForController.weighty = 1.0;
				constraintsDiagramForController.ipadx = 25;
				constraintsDiagramForController.ipady = -30;
				constraintsDiagramForController.insets = new java.awt.Insets(2,
						1, 1, 3);
				getTestGradientViewPane().add(getDiagramForController(),
						constraintsDiagramForController);

				java.awt.GridBagConstraints constraintsDelayObjectView = new java.awt.GridBagConstraints();
				constraintsDelayObjectView.gridx = 1;
				constraintsDelayObjectView.gridy = 1;
				constraintsDelayObjectView.fill = java.awt.GridBagConstraints.BOTH;
				constraintsDelayObjectView.weightx = 1.0;
				constraintsDelayObjectView.weighty = 1.0;
				constraintsDelayObjectView.ipadx = 2;
				constraintsDelayObjectView.ipady = -6;
				constraintsDelayObjectView.insets = new java.awt.Insets(3, 4,
						1, 1);
				getTestGradientViewPane().add(getDelayObjectView(),
						constraintsDelayObjectView);

				java.awt.GridBagConstraints constraintsDiagramForObject = new java.awt.GridBagConstraints();
				constraintsDiagramForObject.gridx = 2;
				constraintsDiagramForObject.gridy = 1;
				constraintsDiagramForObject.fill = java.awt.GridBagConstraints.BOTH;
				constraintsDiagramForObject.weightx = 1.0;
				constraintsDiagramForObject.weighty = 1.0;
				constraintsDiagramForObject.ipadx = 25;
				constraintsDiagramForObject.ipady = -31;
				constraintsDiagramForObject.insets = new java.awt.Insets(3, 1,
						1, 3);
				getTestGradientViewPane().add(getDiagramForObject(),
						constraintsDiagramForObject);

				java.awt.GridBagConstraints constraintsStepTimerView = new java.awt.GridBagConstraints();
				constraintsStepTimerView.gridx = 1;
				constraintsStepTimerView.gridy = 3;
				constraintsStepTimerView.gridwidth = 2;
				constraintsStepTimerView.fill = java.awt.GridBagConstraints.BOTH;
				constraintsStepTimerView.weightx = 1.0;
				constraintsStepTimerView.weighty = 1.0;
				constraintsStepTimerView.ipadx = -37;
				constraintsStepTimerView.ipady = -9;
				constraintsStepTimerView.insets = new java.awt.Insets(2, 5, 1,
						3);
				getTestGradientViewPane().add(getStepTimerView(),
						constraintsStepTimerView);

				java.awt.GridBagConstraints constraintsPidControllerView = new java.awt.GridBagConstraints();
				constraintsPidControllerView.gridx = 1;
				constraintsPidControllerView.gridy = 2;
				constraintsPidControllerView.fill = java.awt.GridBagConstraints.BOTH;
				constraintsPidControllerView.weightx = 1.0;
				constraintsPidControllerView.weighty = 1.0;
				constraintsPidControllerView.ipadx = 2;
				constraintsPidControllerView.ipady = -6;
				constraintsPidControllerView.insets = new java.awt.Insets(2, 4,
						1, 1);
				getTestGradientViewPane().add(getPidControllerView(),
						constraintsPidControllerView);

				java.awt.GridBagConstraints constraintsOptimizerView = new java.awt.GridBagConstraints();
				constraintsOptimizerView.gridx = 1;
				constraintsOptimizerView.gridy = 4;
				constraintsOptimizerView.fill = java.awt.GridBagConstraints.BOTH;
				constraintsOptimizerView.weightx = 1.0;
				constraintsOptimizerView.weighty = 1.0;
				constraintsOptimizerView.ipadx = 8;
				constraintsOptimizerView.ipady = -11;
				constraintsOptimizerView.insets = new java.awt.Insets(2, 4, 3,
						2);
				getTestGradientViewPane().add(getOptimizerView(),
						constraintsOptimizerView);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjTestGradientViewPane;
	}

	/**
	 * Called whenever the part throws an exception.
	 * 
	 * @param exception
	 *            java.lang.Throwable
	 */
	private void handleException(java.lang.Throwable exception) {

		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
		// exception.printStackTrace(System.out);
	}

	/**
	 * Comment
	 */
	public void initApp() {
		getStepTimerView().setIController(getPidControllerView());
		getStepTimerView().setIOperatingObject(getDelayObjectView());
		getPidControllerView().setIStepTimer(getStepTimerView());
		getPidControllerView().setIOperatingObject(getDelayObjectView());
		getPidControllerView().setPainter(
				getDiagramForController().getPainter());
		getDelayObjectView().setIStepTimer(getStepTimerView());
		getDelayObjectView().setPainter(getDiagramForObject().getPainter());
		getOptimizerView().setIController(getPidControllerView());
		getOptimizerView().setIStepTimer(getStepTimerView());
		getOptimizerView().setPainter(getDiagramForMonitor().getPainter());
	}

	/**
	 * Initializes connections
	 * 
	 * @exception java.lang.Exception
	 *                The exception description.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initConnections() throws java.lang.Exception {
		// user code begin {1}
		// user code end
		this.addWindowListener(ivjEventHandler);
		getStepTimerView().addStepTimerViewListener(ivjEventHandler);
	}

	/**
	 * Initialize the class.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initialize() {
		try {
			// user code begin {1}
			// user code end
			setName("TestGradientUI");
			setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
			setSize(488, 577);
			setTitle("TestGradientUI");
			setContentPane(getJFrameContentPane());
			initConnections();
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		// user code begin {2}
		// user code end
	}

	/**
	 * Starts the application.
	 * 
	 * @param args
	 *            an array of command-line arguments
	 */
	public static void main(java.lang.String[] args) {
		try {
			/* Set native look and feel */
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			/* Create the frame */
			TestGradientUI aTestGradientView = new TestGradientUI();
			/* Add a windowListener for the windowClosedEvent */
			aTestGradientView
					.addWindowListener(new java.awt.event.WindowAdapter() {
						public void windowClosed(java.awt.event.WindowEvent e) {
							System.exit(0);
						};
					});
			aTestGradientView.setVisible(true);
		} catch (Throwable exception) {
			System.err
					.println("Exception occurred in mainForAllLab() of TestGradientUI");
			exception.printStackTrace(System.out);
		}
	}
}
